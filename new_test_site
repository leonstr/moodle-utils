#!/bin/bash
# Create a Moodle site on a CentOS server running Apache and MySQL/MariaDB.
# PHP and MySQL/MariaDB must be alread installed and configured.
# Usage: new_test_site [[-b branch_ver] | [-t tag]] [-g git_repo] domain-name
#
# E.g.:
#    new_test_site moodle1.example.com
#
#    new_test_site -b 35 -g https://github.com/moodle/moodle.git \
#    moodle2.example.com
#
#    new_test_site -t v3.6.2 moodle3.example.com
#
# Minimum Moodle version: 2.5
# Can manually set up source code directory avoiding git clone.
# Leon Stringer <leon@priorsvle.com>
local_repo=/usr/share/repos/moodle
branch=MOODLE_36_STABLE
upstream_repo=git://git.moodle.org/moodle.git
tag=""
OPTIND=1

while getopts "g:b:t:" opt; do
	case "$opt" in
		b) branch=MOODLE_${OPTARG}_STABLE
			;;
		g) upstream_repo=$OPTARG
			;;
		t) tag=$OPTARG
			branch=MOODLE_${tag:1:1}${tag:3:1}_STABLE
	esac
done

shift $((OPTIND-1))

if [ "$#" -ne 1 ]; then
	>&2 echo "Error: Missing domain name."
	exit 1
fi

domain_name=$1
conf_file=/etc/httpd/conf.d/$domain_name.conf
cert_file=/etc/pki/tls/certs/$domain_name.crt
key_file=/etc/pki/tls/private/$domain_name.key
sitedir=/var/www/$domain_name
moodle=$sitedir/moodle
dataroot=$sitedir/moodledata
dbname=${domain_name/./_}
dbpass=`openssl rand -base64 12`	# https://unix.stackexchange.com/a/306107

if [ -e "$conf_file" ]; then
	>&2 echo "Error: $conf_file already exists."
	exit 1
fi

if [ -e "$cert_file" ]; then
	>&2 echo "Error: $cert_file already exists."
	exit 1
fi

if [ -e "$key_file" ]; then
	>&2 echo "Error: $key_file already exists."
	exit 1
fi

mysql -u root -p --execute="CREATE DATABASE \`$dbname\` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;CREATE USER '$dbname'@'localhost' IDENTIFIED BY '$dbpass';GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,CREATE TEMPORARY TABLES,DROP,INDEX,ALTER ON \`$dbname\`.* TO '$dbname'@'localhost'"

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Unable to create database or database user."
	exit 1
fi

if [ -d "$sitedir" ]; then
	mkdir $dataroot
else
	mkdir $sitedir $dataroot
fi

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Unable to create directories."
	exit 1
fi

chown apache. $dataroot
selinux_status=`getenforce`

if [ "$?" -eq "0" ] && [ "$selinux_status" == "Enforcing" ]; then
	semanage fcontext -a -t httpd_sys_rw_content_t "$dataroot"
	restorecon -v "$dataroot" > /dev/null
fi

 # If there's a moodle dir, assume this is a source code dir.  If this is an
 # existing site the config.php will stop install.php (and if there's an
 # existing database with the same name then the CREATE DATABASE would have
 # failed previously).
if [ ! -d "$moodle" ]; then
	git_clone_args=("-q")

	 # Is there a local Git repo for Moodle?
	if [ -d "$local_repo" ]; then
		git_clone_args+=("--reference" "$local_repo")
	fi

	git_clone_args+=("$upstream_repo")

	if [ ! -z "$tag" ]; then
		git_clone_args+=("--branch" $tag)
	else
		git_clone_args+=("--branch" $branch)
	fi

	git_clone_args+=("$moodle")
	git clone ${git_clone_args[@]}
fi

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Git clone failed."
	exit 1
fi

install_args=("--wwwroot=https://$domain_name" "--dbname=$dbname" "--dbuser=$dbname" "--dbpass=$dbpass" "--fullname=Test Site" "--shortname=Home" "--adminpass=Password-1" "--agree-license" "--non-interactive")

 # dbtype mariadb introduced with Moodle 2.6
if [ "$branch" == "MOODLE_25_STABLE" ]; then
	install_args+=("--dbtype=mysqli")
else
	install_args+=("--dbtype=mariadb")
fi

if [ "$branch" != "MOODLE_25_STABLE" ] && [ "$branch" != "MOODLE_26_STABLE" ] \
				&& [ "$branch" != "MOODLE_27_STABLE" ]; then
	install_args+=("--adminemail=admin@example.com")
fi

php -f $sitedir/moodle/admin/cli/install.php -- "${install_args[@]}" > /dev/null

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Install command failed."
	exit 1
fi

chown apache $sitedir/moodle/config.php

openssl req -x509 -newkey rsa:4096 -keyout $key_file -out $cert_file -days 720 -nodes -subj "/C=GB/O=PriorsVLE Ltd/CN=$domain_name" > /dev/null

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Unable to create self-signed certificates."
	exit 1
fi

chmod 600 /etc/pki/tls/private/$domain_name.key

echo "<VirtualHost *:443>" > $conf_file

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Unable to create Apache config file."
	exit 1
fi

echo "    ServerName $domain_name" >> $conf_file
echo "    DocumentRoot $sitedir/moodle" >> $conf_file
echo "    SSLEngine on" >> $conf_file
echo "    SSLCertificateFile $cert_file" >> $conf_file
echo "    SSLCertificateKeyFile $key_file" >> $conf_file
echo "</VirtualHost>" >> $conf_file

apachectl configtest > /dev/null 2>&1

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Apache configuration error."
	exit 1
fi

systemctl reload httpd

if [ "$?" -ne "0" ]; then
	>&2 echo "Error: Error reloading Apache."
	exit 1
fi
